{"version":3,"sources":["webpack:///./src/pages/reservations.jsx"],"names":["connect","state","reservations","all","showModal","showModalNew","dispatch","useDispatch","useEffect","getAllReservations","title","className","id","cellPadding","cellSpacing","border","length","map","user","projection","key","movie","showtime","name","id_number","mobile","email"],"mappings":"4NAqEeA,uBALS,SAAAC,GAAK,MAAK,CAChCC,aAAcD,EAAMC,aAAaC,IACjCC,UAAWH,EAAMC,aAAaG,gBAGQ,KAAzBL,EA3DM,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAChBI,EAAWC,cAKjB,OAJAC,qBAAU,WACRF,EAASG,iBACR,CAACH,IAGF,YAAC,IAAD,KACE,YAAC,IAAD,CAAKI,MAAM,kBACX,YAAC,IAAD,CAAeA,MAAM,wBACrB,YAAC,IAAD,MACA,mBAAKC,UAAU,iCACb,qBAAOC,GAAG,gBAAgBC,YAAa,EAAGC,YAAa,EAAGC,OAAQ,GAChE,yBACE,sBACE,kCACA,kBAAIJ,UAAU,kCAAd,SACA,iCACA,kBAAIA,UAAU,kBAAd,UACA,iCACA,kBAAIA,UAAU,iCAAd,aAMR,qBAAOE,YAAa,EAAGC,YAAa,EAAGC,OAAQ,GAC7C,yBACGb,GAAgBA,EAAac,OAAS,EACrCd,EAAae,KAAI,gBAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,KAAMC,EAAb,EAAaA,WAAb,OACf,kBAAIC,IAAKR,GACP,sBAAKO,EAAWE,MAAMX,OACtB,kBAAIC,UAAU,kCACXQ,EAAWG,UAEd,sBAAKJ,EAAKK,MACV,kBAAIZ,UAAU,kBAAkBO,EAAKM,WACrC,sBAAKN,EAAKO,QACV,kBAAId,UAAU,iCAAiCO,EAAKQ,WAIxD,YAAC,IAAD","file":"component---src-pages-reservations-jsx-2e5c848e4a4ffa4bc2e1.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { SectionHeader } from '../components/sectionHeader';\nimport FilterByDateComponent from '../components/indexMovies/FilterByDate';\nimport { getAllReservations } from '../state/reservationActions';\nimport Loading from '../components/Loading';\n\nconst Reservations = ({ reservations }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllReservations());\n  }, [dispatch]);\n\n  return (\n    <Layout>\n      <SEO title=\"Reservaciones\" />\n      <SectionHeader title=\"Reservas realizadas\" />\n      <FilterByDateComponent></FilterByDateComponent>\n      <div className=\"tbl-header table-scrollable-x\">\n        <table id=\"tbl-container\" cellPadding={0} cellSpacing={0} border={0}>\n          <thead>\n            <tr>\n              <th>Película</th>\n              <th className=\"hide-on-mobile  hide-on-tablet\">Fecha</th>\n              <th>Cliente</th>\n              <th className=\"hide-on-mobile\">Cédula</th>\n              <th>Celular</th>\n              <th className=\"hide-on-mobile hide-on-tablet\">Email</th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n\n      <table cellPadding={0} cellSpacing={0} border={0}>\n        <tbody>\n          {reservations && reservations.length > 0 ? (\n            reservations.map(({ id, user, projection }) => (\n              <tr key={id}>\n                <td>{projection.movie.title}</td>\n                <td className=\"hide-on-mobile  hide-on-tablet\">\n                  {projection.showtime}\n                </td>\n                <td>{user.name}</td>\n                <td className=\"hide-on-mobile\">{user.id_number}</td>\n                <td>{user.mobile}</td>\n                <td className=\"hide-on-mobile hide-on-tablet\">{user.email}</td>\n              </tr>\n            ))\n          ) : (\n            <Loading />\n          )}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nReservations.propTypes = {\n  showtime: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  reservations: state.reservations.all,\n  showModal: state.reservations.showModalNew,\n});\n\nexport default connect(mapStateToProps, null)(Reservations);\n"],"sourceRoot":""}